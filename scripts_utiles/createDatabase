#!/bin/sh

# Création d'une nouvelle base
# Cette base sera peuplée par les données présentes dans un des fichiers de sauvegarde
# dont le nom commence par le nom donné à la base (s'il y en a plusieurs on prendra le plus récent,
# s'il n'y en a aucun, on créera une base vide)

source central

nomUser=$1
schemaBase=$2
nbParamsautorises=2
cheminScript=${CHEMIN_RACINE}
repertoireBackup=${CHEMIN_BACKUP}
script_a_lancer=${SCRIPT_A_LANCER}
current_time=$(date "+%Y.%m.%d-%H.%M")
encodage="utf8"

passwordUser=${PASSWORD_USER}
passwordRoot=${PASSWORD_ROOT}

aide(){
	echo -e "\n\n-> Le 1er parametre est le nom d'utilisateur mysql que l'on souhaite conecter"
	echo -e " -> Le 2eme parametre est le nom du schema de la base que l'on souhaite créer\n"
}

create(){
	# Fichiers temporaires
	fichierCommande="commande"
	fichierImportationDonnees="import_data"
	#Restauration de la dernière sauvegarde
	cd ${cheminScript}
	echo -e "\nTentative de construction d'un nouvelle table vide accessible par ${nomUser}\n"
	echo -e "Mot de passe root de MySQL requis\n"
	# On stocke la commande à éxécuter dans un fichier temporaire
	echo "mysql -u root -p${passwordRoot} -e \"create database ${schemaBase} default character set ${encodage}; grant all on ${schemaBase}.* to '${nomUser}'@'localhost'; flush privileges;\" "> ${fichierCommande}
	# On exécute le script en lui passant la commande que l'on vient de stocker en entrée
	./${script_a_lancer} < ${fichierCommande}
	# on supprime ce fichier temporaire
	rm ${fichierCommande}
	
	#Importation des données
	cd ${repertoireBackup}
	# Récupération du fichier le plus récent dont le nom commance par le nom de la base passé en paramètre
	lastFile=`ls -t ${schemaBase}* | head -1`
	echo -e "\nFichier a importer (le plus récent): "${lastFile}"\n"
	echo -e "Mot de passe de l'utilisateur "${nomUser}" requis pour l'importation des données (cette étape peut être longue...)\n"
	# On stocke la commande dans un fichier temporaire
	echo "mysql -u ${nomUser} -p${passwordUser} ${schemaBase}< ${lastFile};exit;" > ${fichierImportationDonnees}
	# On éxécute le script en lui passant cette commande en entrée
	${cheminScript}/${script_a_lancer} < ${fichierImportationDonnees}
	# On supprime le fichier temporaire
	rm ${fichierImportationDonnees}
	echo -e "SUCCES ! Création de la nouvelle base et peuplement des données"
}

if [ "${nomUser}" == "-h" ]
then
	echo -e "\nAide"
	aide
	exit 0
elif [ ${nbParamsautorises} -ne $# ]
then
	echo -e "\n\n	Il faut passer "${nbParamsautorises}" parametres"
	echo -e "Exemple :	"$0" nomUser nouveauSchema\n\n"
	exit 0
else
	create
	exit 0
fi

